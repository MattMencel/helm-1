apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "langsmith.fullname" . }}-{{ .Values.frontend.name }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
  annotations:
    {{- include "langsmith.annotations" . | nindent 4 }}
data:
{{- if .Values.ingress.subdomain }}
  nginx.conf: |
    proxy_ssl_server_name on;

    proxy_cache_path /tmp/server_cache levels=1:2 keys_zone=llm_cache:100m max_size=1g inactive=60 use_temp_path=off;

    log_format cache_log '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    'Cache: $upstream_cache_status';

    server {
        listen       {{ .Values.frontend.containerPort }};
        listen  [::]:{{ .Values.frontend.containerPort }};
        server_name  localhost;
        client_max_body_size 25M;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /tmp;
        }

        location = /health {
                # health checks are frequent and boring, so we avoid logging them
                access_log off;
                return 200;
         }

        location ~ /{{ .Values.ingress.subdomain }}/api/playground/ {
            rewrite /{{ .Values.ingress.subdomain }}/api/playground/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}:{{ .Values.playground.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/playground {
            rewrite /{{ .Values.ingress.subdomain }}/api/playground /  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}:{{ .Values.playground.service.port }};
        }

         # Hub Backend Routes
         location ~ /{{ .Values.ingress.subdomain }}/api-hub {
            rewrite /{{ .Values.ingress.subdomain }}/api-hub/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.hubBackend.name }}:{{ .Values.hubBackend.service.port }};
        }

         # Backend Routes
         location ~ /{{ .Values.ingress.subdomain }}/api {
            rewrite /{{ .Values.ingress.subdomain }}/api/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}:{{ .Values.backend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }} {
            absolute_redirect off;
            rewrite ^ /{{ .Values.ingress.subdomain }}/ permanent;
        }

        location ~ /{{ .Values.ingress.subdomain }} {
            root   /tmp;
            index  index.html index.htm;
            try_files $uri $uri/ /{{ .Values.ingress.subdomain }}/index.html;
        }

        {{- if .Values.frontend.cache.enabled }}
        location ~ /{{ .Values.ingress.subdomain }}/proxy/openai {
            rewrite /{{ .Values.ingress.subdomain }}/proxy/openai/(.*) /v1/$1  break;
            proxy_pass {{ .Values.frontend.cache.config.openAIUrl }};
            proxy_set_header Host api.openai.com;


            proxy_set_header Connection '';
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers "Set-Cookie";

            proxy_buffer_size   2k;

            proxy_cache llm_cache;
            proxy_cache_methods POST;
            proxy_cache_key "{{ .Values.frontend.cache.config.openAIUrl }}|$request_method|$request_uri|$request_body";
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404      1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;

            add_header X-Cache-Status $upstream_cache_status;
            client_body_buffer_size 4m;
            access_log /dev/stdout cache_log;
        }
        {{- end }}
    }
{{- else }}
  nginx.conf: |
    proxy_ssl_server_name on;

    proxy_cache_path /tmp/server_cache levels=1:2 keys_zone=llm_cache:100m max_size=1g inactive=60 use_temp_path=off;

    log_format cache_log '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    'Cache: $upstream_cache_status';


    server {
        listen       {{ .Values.frontend.containerPort }};
        listen  [::]:{{ .Values.frontend.containerPort }};
        server_name  localhost;
        client_max_body_size 25M;

        location / {
            root   /tmp/build;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location = /health {
                  # health checks are frequent and boring, so we avoid logging them
                  access_log off;
                  return 200;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /tmp/build;
        }

        location ~ /api/playground/ {
            rewrite /api/playground/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}:{{ .Values.playground.service.port }};
        }

        location = /api/playground {
            rewrite /api/playground /  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}:{{ .Values.playground.service.port }};
        }

         # Hub Backend Routes
         location ~ /api-hub {
            rewrite /api-hub/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.hubBackend.name }}:{{ .Values.hubBackend.service.port }};
        }

        # Backend Routes
        location ~ /api {
            rewrite /api/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}:{{ .Values.backend.service.port }};
       }

        {{- if .Values.frontend.cache.enabled }}
        location ~ /proxy/openai {
            rewrite /proxy/openai/(.*) /v1/$1  break;
            proxy_pass {{ .Values.frontend.cache.config.openAIUrl }};
            proxy_set_header Host api.openai.com;


            proxy_set_header Connection '';
            proxy_ignore_headers Cache-Control;
            proxy_ignore_headers "Set-Cookie";

            proxy_buffer_size   2k;

            proxy_cache llm_cache;
            proxy_cache_methods POST;
            proxy_cache_key "{{ .Values.frontend.cache.config.openAIUrl }}|$request_method|$request_uri|$request_body";
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404      1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;

            add_header X-Cache-Status $upstream_cache_status;
            client_body_buffer_size 4m;
            access_log /dev/stdout cache_log;
        }
        {{- end }}
      }
{{- end }}
