{{- if not .Values.config.existingSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "langsmith.secretsName" . }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
  annotations:
    {{- include "langsmith.annotations" . | nindent 4 }}
data:
  openai_api_key: {{ .Values.config.openaiApiKey | b64enc | quote }}
  oauth_client_id: {{ .Values.config.oauth.oauthClientId | b64enc | quote }}
  oauth_issuer_url: {{ .Values.config.oauth.oauthIssuerUrl | b64enc | quote }}
  langsmith_license_key: {{ .Values.config.langsmithLicenseKey | b64enc | quote }}
  api_key_salt: {{ .Values.config.apiKeySalt | default .Values.config.langsmithLicenseKey | b64enc | quote }}
  {{- if not .Values.config.existingSecretName }}

  {{- $secretName := include "langsmith.secretsName" . }}
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}

  {{- $jwtSecretFromValues := .Values.config.basicAuth.jwtSecret | default "" }}
  {{- $jwtSecretFromSecret := (get $secretData "jwt_secret") | default "" }}
  {{- $jwtSecret := ternary $jwtSecretFromSecret (b64enc $jwtSecretFromValues)  (empty $jwtSecretFromValues) }}

  {{- $initialOrgAdminPasswordFromValues := .Values.config.basicAuth.initialOrgAdminPassword | default "" }}
  {{- $initialOrgAdminPasswordFromSecret := (get $secretData "initial_org_admin_password") | default "" }}
  {{- $initialOrgAdminPassword := ternary $initialOrgAdminPasswordFromSecret (b64enc $initialOrgAdminPasswordFromValues)  (empty $initialOrgAdminPasswordFromValues) }}
  jwt_secret: {{ $jwtSecret }}
  initial_org_admin_password: {{ $initialOrgAdminPassword }}
  {{- end }}

{{- end }}
